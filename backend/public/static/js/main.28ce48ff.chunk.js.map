{"version":3,"sources":["components/DeliveryTrackerTemplate.js","lib/styles/palette.js","components/common/Header.js","components/referer/InputForm.js","components/common/Button.js","components/referer/Referer.js","lib/DeliveryCompanyOptions.js","lib/api/client.js","lib/api/referer.js","modules/referer.js","containers/RefererContainer.js","components/deliveryTracking/DeliveryTrackingBase.js","components/deliveryTracking/DeliveryTrackingDetails.js","components/deliveryTracking/DeliveryTracking.js","containers/DeliveryTrackingContainer.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["DeliveryTrackerTemplateBlock","styled","div","DeliveryTrackerTemplate","children","className","palette","gray","HeaderBlock","Header","title","InputFormBlock","StyledInput","input","StyledSelection","Select","DeliveryTrackerInput","label","onChange","value","selection","options","style","position","left","top","placeholder","StyledButton","button","Button","props","ButtonWithMargin","ErrorMessage","Referer","deliveryCompanyOptions","invoiceNumber","changeDeliveryCompany","changeInvoiceNumber","refer","error","InputForm","name","selected","e","target","onClick","client","axios","create","referDeliveryTracking","deliveryCompany","get","createAction","referer","handleActions","state","loading","deliveryTracking","payload","referError","connect","dispatch","getDeliveryTracking","a","type","response","status","data","useState","setError","useEffect","StyledContainer","DeliveryTrackingBase","trackingBase","senderName","receiverName","receiverAddress","itemName","complete","recipient","marginTop","DeliveryTrackingDetails","trackingDetails","marginBottom","map","index","timeString","store","phoneNumbers","key","join","DeliveryTracking","base","details","sortedDetails","sort","b","time","sortDeliveryTrackingDetailsByTimeDescending","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","logger","createLogger","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.28ce48ff.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst DeliveryTrackerTemplateBlock = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  .DeliveryTrackerTitle {\n    color: 'black';\n    height: 4rem;\n    font-size: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst DeliveryTrackerTemplate = ({ children }) => {\n  return (\n    <DeliveryTrackerTemplateBlock>\n      <div className=\"DeliveryTrackerTitle\">월간 가슴 배송 조회</div>\n      <div className=\"content\">{children}</div>\n    </DeliveryTrackerTemplateBlock>\n  );\n};\n\nexport default DeliveryTrackerTemplate;\n","const palette = {\n  gray: [\n    '#f8f9fa',\n    '#f1f3f5',\n    '#e9ecef',\n    '#dee2e6',\n    '#ced4da',\n    '#adb5bd',\n    '#868e96',\n    '#495057',\n    '#343a40',\n    '#212529',\n  ]\n};\n\nexport default palette;","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst HeaderBlock = styled.div`\n  width: 100%;\n  background: ${palette.gray[3]};\n\n  .DeliveryTrackerHeaderTitle {\n    color: 'black';\n    height: 3rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    display: flex;\n    align-items: center;\n    margin-left: 2%;\n  }\n`;\n\nconst Header = ({ title }) => {\n  return (\n    <HeaderBlock>\n      <div className=\"DeliveryTrackerHeaderTitle\">{title}</div>\n    </HeaderBlock>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Select from 'react-select';\n\nconst InputFormBlock = styled.div`\n  margin-top: 1.5rem;\n  margin-left: 3rem;\n\n  .inputLabel {\n    font-weight: bold;\n    display: inline-block;\n    width: 10rem;\n    color: ${palette.gray[7]};\n  }\n`;\n\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  margin-left: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[8]};\n  padding: 0.3rem;\n  width: 20rem;\n`;\n\nconst StyledSelection = styled(Select)`\n  display: inline-block;\n  font-size: 1rem;\n  margin-left: 1rem;\n  width: 20rem;\n`;\n\nconst DeliveryTrackerInput = ({\n  label,\n  onChange,\n  value,\n  selection,\n  options,\n}) => {\n  return (\n    <InputFormBlock>\n      <div className=\"inputLabel\">{label}</div>\n      {selection ? (\n        <div style={{ position: 'absolute', left: '13rem', top: '8rem'}}>\n          <StyledSelection\n            placeholder={label}\n            onChange={onChange}\n            options={options}\n            value={value}\n          />\n        </div>\n      ) : (\n        <StyledInput placeholder={label} value={value} onChange={onChange} />\n      )}\n    </InputFormBlock>\n  );\n};\n\nexport default DeliveryTrackerInput;\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst StyledButton = styled.button`\n  border: none;\n  border-radius: 2px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  cursor: pointer;\n\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n`;\n\nconst Button = props => <StyledButton {...props} />\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Header from '../common/Header';\nimport InputForm from './InputForm';\nimport Button from '../common/Button';\n\nconst ButtonWithMargin = styled(Button)`\n  margin-left: 14rem;\n  margin-top: 1rem;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  font-size: 0.875rem;\n  font-weight: bold;\n  margin-left: 20rem;\n`;\n\nconst Referer = ({\n  deliveryCompanyOptions,\n  invoiceNumber,\n  changeDeliveryCompany,\n  changeInvoiceNumber,\n  refer,\n  error,\n}) => {\n  const onChangeDeliveryCompany = selected => changeDeliveryCompany(selected.value);\n  const onChangeInvoiceNumber = e => changeInvoiceNumber(e.target.value);\n  \n  return (\n    <div>\n      <Header title=\"조회 정보\" />\n      <InputForm\n        name=\"deliveryCompany\"\n        label=\"택배 회사\"\n        selection\n        onChange={onChangeDeliveryCompany}\n        options={deliveryCompanyOptions}\n      />\n      <InputForm\n        label=\"송장 번호\"\n        value={invoiceNumber}\n        onChange={onChangeInvoiceNumber}\n      />\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n      <ButtonWithMargin onClick={refer}>\n        조회하기\n      </ButtonWithMargin>\n    </div>\n  );\n};\n\nexport default Referer;\n","export default [\n  { value: '04', label: 'CJ대한통운' },\n  { value: '05', label: '한진택배' },\n  { value: '23', label: '경동택배' },\n];","import axios from 'axios';\n\nconst client = axios.create();\n\nexport default client;\n","import client from './client';\n\nexport const referDeliveryTracking = ({ deliveryCompany, invoiceNumber }) =>\n  client.get(\n    `/api/delivery-tracking?deliveryCompanyCode=${deliveryCompany}&invoiceNumber=${invoiceNumber}`,\n  );\n","import { createAction, handleActions } from 'redux-actions';\nimport { referDeliveryTracking } from '../lib/api/referer';\n\nconst GET_DELIVERY_TRACKING = 'referer/GET_DELIVERY_TRACKING';\nconst GET_DELIVERY_TRACKING_SUCCESS = 'referer/GET_DELIVERY_TRACKING_SUCCESS';\nconst GET_DELIVERY_TRACKING_FAILURE = 'referer/GET_DELIVERY_TRACKING_FAILURE';\n\nconst CHANGE_DELIVERY_COMPANY = 'referer/CHANGE_DELIVERY_COMPANY';\nconst CHANGE_INVOICE_NUMBER = 'referer/CHANGE_INVOICE_NUMBER';\n\nexport const getDeliveryTracking = ({\n  deliveryCompany,\n  invoiceNumber,\n}) => async dispatch => {\n  dispatch({ type: GET_DELIVERY_TRACKING });\n  try {\n    const response = await referDeliveryTracking({\n      deliveryCompany,\n      invoiceNumber,\n    });\n    // No contents\n    if (response.status === 204) {\n      dispatch({\n        type: GET_DELIVERY_TRACKING_FAILURE,\n        payload: { response },\n        error: true,\n      });\n\n      return;\n    }\n\n    dispatch({\n      type: GET_DELIVERY_TRACKING_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_DELIVERY_TRACKING_FAILURE,\n      payload: error,\n      error: true,\n    });\n  }\n};\n\nexport const changeDeliveryCompany = createAction(\n  CHANGE_DELIVERY_COMPANY,\n  deliveryCompany => deliveryCompany,\n);\n\nexport const changeInvoiceNumber = createAction(\n  CHANGE_INVOICE_NUMBER,\n  invoiceNumber => invoiceNumber,\n);\n\nconst initialState = {\n  deliveryCompany: '',\n  invoiceNumber: '',\n  deliveryTracking: null,\n  loading: false,\n  referError: null,\n};\n\nconst referer = handleActions(\n  {\n    [GET_DELIVERY_TRACKING]: state => ({\n      ...state,\n      loading: true,\n    }),\n    [GET_DELIVERY_TRACKING_SUCCESS]: (\n      state,\n      { payload: deliveryTracking },\n    ) => ({\n      ...state,\n      referError: null,\n      deliveryTracking,\n      loading: false,\n    }),\n    [GET_DELIVERY_TRACKING_FAILURE]: (state, { payload: referError }) => ({\n      ...state,\n      referError,\n      loading: false,\n    }),\n    [CHANGE_DELIVERY_COMPANY]: (state, { payload: deliveryCompany }) => ({\n      ...state,\n      deliveryCompany,\n    }),\n    [CHANGE_INVOICE_NUMBER]: (state, { payload: invoiceNumber }) => ({\n      ...state,\n      invoiceNumber,\n    }),\n  },\n  initialState,\n);\n\nexport default referer;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Referer from '../components/referer/Referer';\nimport deliveryCompanyOptions from '../lib/DeliveryCompanyOptions';\n\nimport {\n  changeDeliveryCompany,\n  changeInvoiceNumber,\n  getDeliveryTracking,\n} from '../modules/referer';\n\nconst RefererContainer = ({\n  deliveryCompany,\n  invoiceNumber,\n  changeDeliveryCompany,\n  changeInvoiceNumber,\n  getDeliveryTracking,\n  deliveryTracking,\n  referError,\n}) => {\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (referError) {\n      // 400 bad request\n      if (referError.response.status === 400) {\n        setError('잘못된 정보입니다. 송장 번호와 택배 회사를 확인해주세요.');\n        return;\n      }\n      // 204 no contents\n      if (referError.response.status === 204) {\n        setError('택배사로부터 배송 현황이 확인되지 않습니다.');\n        return;\n      }\n      setError(\n        '서버 에러가 발생했습니다. 문제가 계속되면 서버 관리자에게 문의해주세요.',\n      );\n    }\n\n    return;\n  }, [referError, deliveryTracking]);\n\n  const refer = () => {\n    setError(null);\n    if (!deliveryCompany || !invoiceNumber)\n      return setError('택배 회사와 송장 번호를 모두 입력해주세요.');\n\n    getDeliveryTracking({ deliveryCompany, invoiceNumber });\n  };\n\n  return (\n    <div>\n      <Referer\n        deliveryCompany={deliveryCompany}\n        invoiceNumber={invoiceNumber}\n        changeDeliveryCompany={changeDeliveryCompany}\n        changeInvoiceNumber={changeInvoiceNumber}\n        deliveryCompanyOptions={deliveryCompanyOptions}\n        refer={refer}\n        error={error}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  deliveryCompany: state.referer.deliveryCompany,\n  invoiceNumber: state.referer.invoiceNumber,\n  referError: state.referer.referError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getDeliveryTracking: ({ deliveryCompany, invoiceNumber }) => {\n    dispatch(getDeliveryTracking({ deliveryCompany, invoiceNumber }));\n  },\n  changeDeliveryCompany: deliveryCompany => {\n    dispatch(changeDeliveryCompany(deliveryCompany));\n  },\n  changeInvoiceNumber: invoiceNumber => {\n    dispatch(changeInvoiceNumber(invoiceNumber));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RefererContainer);\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Header from '../common/Header';\n\nconst StyledContainer = styled.div`\n  margin-left: 3%;\n  margin-top: 1%;\n\n  .deliveryTrackingBaseTitle {\n    font-weight: bold;\n    font-size: 1.2rem;\n    display: inline-block;\n    width: 30%;\n    color: ${palette.gray[7]};\n  }\n  .deliveryTrackingBaseValue {\n    font-weight: bold;\n    display: inline-block;\n    width: 70%;\n    color: ${palette.gray[9]};\n  }\n`;\n\nconst DeliveryTrackingBase = ({ trackingBase }) => {\n  const {\n    invoiceNumber,\n    senderName,\n    receiverName,\n    receiverAddress,\n    itemName,\n    complete,\n    recipient,\n  } = trackingBase;\n\n  return (\n    <div style={{ marginTop: '2.5%' }}>\n      <Header title=\"택배 정보\" />\n      <StyledContainer>\n        <div className=\"deliveryTrackingBaseTitle\">운송장번호</div>\n        <div className=\"deliveryTrackingBaseValue\">{invoiceNumber}</div>\n      </StyledContainer>\n      <StyledContainer>\n        <div className=\"deliveryTrackingBaseTitle\">받는 사람</div>\n        <div className=\"deliveryTrackingBaseValue\">{receiverName}</div>\n      </StyledContainer>\n      <StyledContainer>\n        <div className=\"deliveryTrackingBaseTitle\">보낸 사람</div>\n        <div className=\"deliveryTrackingBaseValue\">{senderName}</div>\n      </StyledContainer>\n      <StyledContainer>\n        <div className=\"deliveryTrackingBaseTitle\">수령 주소</div>\n        <div className=\"deliveryTrackingBaseValue\">{receiverAddress}</div>\n      </StyledContainer>\n      <StyledContainer>\n        <div className=\"deliveryTrackingBaseTitle\">물건 이름</div>\n        <div className=\"deliveryTrackingBaseValue\">{itemName}</div>\n      </StyledContainer>\n      <StyledContainer>\n        <div className=\"deliveryTrackingBaseTitle\">완료 여부</div>\n        <div className=\"deliveryTrackingBaseValue\">{complete ? '배송 완료' : '배송 중'}</div>\n      </StyledContainer>\n      {complete && (\n        <StyledContainer>\n          <div className=\"deliveryTrackingBaseTitle\">수령 장소</div>\n          <div className=\"deliveryTrackingBaseValue\">{recipient}</div>\n        </StyledContainer>\n      )}\n    </div>\n  );\n};\n\nexport default DeliveryTrackingBase;\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Header from '../common/Header';\n\nconst StyledContainer = styled.div`\n  margin-left: 3%;\n  margin-top: 1%;\n  .deliveryTrackingDetailsTitle {\n    color: ${palette.gray[6]};\n  }\n  .time {\n    font-weight: bold;\n    display: inline-block;\n    width: 20%;\n  }\n  .store {\n    font-weight: bold;\n    display: inline-block;\n    width: 20%;\n  }\n  .phoneNumber {\n    font-weight: bold;\n    display: inline-block;\n    width: 30%;\n  }\n  .status {\n    font-weight: bold;\n    display: inline-block;\n    width: 20%;\n  }\n`;\n\nconst DeliveryTrackingDetails = ({ trackingDetails }) => {\n  return (\n    <div style={{ marginTop: '2.5%', marginBottom: '2.5%' }}>\n      <Header title=\"상세 정보\" />\n      <StyledContainer>\n        <div className=\"deliveryTrackingDetailsTitle time\">처리 일자</div>\n        <div className=\"deliveryTrackingDetailsTitle store\">처리 점소</div>\n        <div className=\"deliveryTrackingDetailsTitle phoneNumber\">전화 번호</div>\n        <div className=\"deliveryTrackingDetailsTitle status\">배송 상태</div>\n      </StyledContainer>\n      {trackingDetails.map(({ timeString, store, status, phoneNumbers }, index) => {\n        return (\n          <StyledContainer key={index}>\n            <div className=\"time\">{timeString}</div>\n            <div className=\"store\">{store}</div>\n            <div className=\"phoneNumber\">{phoneNumbers.join(', ')}</div>\n            <div className=\"status\">{status}</div>\n          </StyledContainer>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DeliveryTrackingDetails;\n","import React from 'react';\nimport DeliveryTrackingBase from './DeliveryTrackingBase';\nimport DeliveryTrackingDetails from './DeliveryTrackingDetails';\n\nconst DeliveryTracking = ({ deliveryTracking }) => {\n  return (\n    <div>\n      <DeliveryTrackingBase  trackingBase={deliveryTracking.base} />\n      <DeliveryTrackingDetails  trackingDetails={deliveryTracking.details} />\n    </div>\n  );\n};\n\nexport default DeliveryTracking;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport DeliveryTracking from '../components/deliveryTracking/DeliveryTracking';\n\nconst DeliveryTrackingContainer = ({ deliveryTracking }) => {\n  const sortDeliveryTrackingDetailsByTimeDescending = () => {\n    const sortedDetails = deliveryTracking.details.sort((a, b) => b.time - a.time);\n    return { ...deliveryTracking, details: sortedDetails };\n  };\n  return (\n    <div>\n      {deliveryTracking && (\n        <DeliveryTracking\n          deliveryTracking={sortDeliveryTrackingDetailsByTimeDescending()}\n        />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  deliveryTracking: state.referer.deliveryTracking,\n});\n\nexport default connect(mapStateToProps)(DeliveryTrackingContainer);\n","import React from 'react';\nimport DeliveryTrackerTemplate from './components/DeliveryTrackerTemplate';\nimport RefererContainer from './containers/RefererContainer';\nimport DeliveryTrackingContainer from './containers/DeliveryTrackingContainer';\n\nconst App = () => {\n  return (\n    <DeliveryTrackerTemplate>\n      <RefererContainer />\n      <DeliveryTrackingContainer />\n    </DeliveryTrackerTemplate>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport referer from './referer';\n\nconst rootReducer = combineReducers({\n  referer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './modules';\nimport { createLogger } from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\n\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger, ReduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}